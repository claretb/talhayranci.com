{"version":3,"file":"component---src-pages-projects-jsx-fc35a5b7672e2cc119af.js","mappings":"2HAEA,MAAMA,EACK,sBADLA,EAEG,qCAFHA,EAIF,sEAJEA,EAKK,gEAcX,IAXgBC,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClC,OACEG,EAAAA,cAAA,OAAKC,UAAWL,EAAiBM,MAAO,CAAEC,WAAY,KACpDH,EAAAA,cAAA,OAAKC,UAAWL,GACdI,EAAAA,cAAA,MAAIC,UAAWL,GAAkBE,IAEnCE,EAAAA,cAAA,OAAKC,UAAWL,GAAkBG,GAC9B,C,+CCdV,MAAMH,EACK,OADLA,EAEE,mCAFFA,EAGE,4BAHFA,EAIS,mCAgCf,IA7BoBC,IAMb,IACDO,GAPe,KACnBC,EAAO,KAAI,KACXC,EAAI,YACJC,EAAW,KACXC,GAAO,EAAK,SACZC,GAAW,GACZZ,EAQC,OALEO,EADEK,EACYT,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAIH,GAAOF,GAEjBN,EAAAA,cAAA,KAAGY,KAAMJ,GAAOF,GAI9BN,EAAAA,cAAA,OAAKC,UAAWL,GACdI,EAAAA,cAAA,MACEC,UAAY,GAAEL,KACZY,EAAO,mCAAqC,MAG7CA,EAAOJ,EAAcE,GAEvBD,GAAQL,EAAAA,cAAA,MAAIC,UAAWL,GAAeS,GACvCL,EAAAA,cAAA,KAAGC,UAAWL,GAAsBW,GAChC,C,0EC7BV,MAAMX,EACG,oBADHA,EAEE,YAiBR,UAdqBiB,IACnBb,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAACe,EAAAA,EAAG,CAACjB,MAAM,cACXE,EAAAA,cAAA,MAAIC,UAAWL,GAAe,kBAC9BI,EAAAA,cAAA,SAAG,2CACwC,IACzCA,EAAAA,cAACU,EAAAA,KAAI,CAACT,UAAWL,EAAce,GAAG,KAAI,oBAE/B,K,sGCEb,MAhBiBd,IAAmB,IAAlB,SAAEmB,GAAUnB,EAC5B,OACEG,EAAAA,cAACiB,EAAAA,EAAO,CAACnB,MAAM,YACZkB,EAASE,KAAKC,GACbnB,EAAAA,cAACoB,EAAAA,EAAW,CACVC,IAAKF,EAAKG,KAAKC,OAAOC,KACtBlB,KAAMa,EAAKG,KAAKG,YAAY3B,MAC5BS,YAAaY,EAAKG,KAAKG,YAAYlB,YACnCC,KAAMW,EAAKG,KAAKC,OAAOC,KACvBf,UAAQ,MAGJ,E,wCCWd,MAnBcZ,IAAe,IAAd,KAAE6B,GAAM7B,EACrB,MAAMmB,EAAWU,EAAKC,kBAAkBC,MAAMC,QAC3CC,GAAwC,YAA/BA,EAAKR,KAAKG,YAAYM,OAE5BC,GAAahB,IAAaA,EAASiB,OAEzC,OAAKjB,GAAaA,EAASiB,OAKzBjC,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAACe,EAAAA,EAAG,CAACjB,MAAM,aACXE,EAAAA,cAACkC,EAAAA,EAAM,CAACC,SAAUT,EAAKU,KAAKC,gBAC1BL,GAAahC,EAAAA,cAACsC,EAAQ,CAACtB,SAAUA,KAP9BhB,EAAAA,cAACuC,EAAAA,QAAQ,KAQP,C","sources":["webpack://devfolio/./src/components/section/index.jsx","webpack://devfolio/./src/components/summary-item/index.jsx","webpack://devfolio/./src/pages/404.jsx","webpack://devfolio/./src/components/projects/index.jsx","webpack://devfolio/./src/pages/projects.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst classes = {\r\n  wrapper: 'block pt-12 md:flex',\r\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\r\n  heading:\r\n    'font-xs tracking-widest text-sm text-black leading-normal uppercase',\r\n  content: 'flex-none text-md text-gray-800 font-light md:flex-1 md:pl-20',\r\n};\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={classes.wrapper} style={{ paddingTop: 10 }}>\r\n      <div className={classes.title}>\r\n        <h2 className={classes.heading}>{title}</h2>\r\n      </div>\r\n      <div className={classes.content}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\n\r\nconst classes = {\r\n  wrapper: 'mb-6',\r\n  name: 'font-semibold text-gray-900 pb-1',\r\n  date: 'italic text-gray-600 pb-1',\r\n  description: 'text-md text-gray-600 font-light',\r\n};\r\n\r\nconst SummaryItem = ({\r\n  date = null,\r\n  name,\r\n  description,\r\n  link = false,\r\n  internal = false,\r\n}) => {\r\n  let linkContent;\r\n  if (internal) {\r\n    linkContent = <Link to={link}>{name}</Link>;\r\n  } else {\r\n    linkContent = <a href={link}>{name}</a>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <h3\r\n        className={`${classes.name} ${\r\n          link ? 'hover:underline hover:text-black' : ''\r\n        }`}\r\n      >\r\n        {link ? linkContent : name}\r\n      </h3>\r\n      {date && <h3 className={classes.date}>{date}</h3>}\r\n      <p className={classes.description}>{description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryItem;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\n\r\nconst classes = {\r\n  title: 'text-lg font-bold',\r\n  link: 'underline',\r\n};\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <Seo title=\"Not found\" />\r\n    <h1 className={classes.title}>404: Not Found</h1>\r\n    <p>\r\n      You just hit a route that doesn't exist.{' '}\r\n      <Link className={classes.link} to=\"/\">\r\n        Return to safety\r\n      </Link>\r\n      .\r\n    </p>\r\n  </Layout>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\n\r\nimport Section from '../section';\r\nimport SummaryItem from '../summary-item';\r\n\r\nconst Projects = ({ projects }) => {\r\n  return (\r\n    <Section title=\"Projects\">\r\n      {projects.map((post) => (\r\n        <SummaryItem\r\n          key={post.node.fields.slug}\r\n          name={post.node.frontmatter.title}\r\n          description={post.node.frontmatter.description}\r\n          link={post.node.fields.slug}\r\n          internal\r\n        />\r\n      ))}\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import { graphql } from 'gatsby';\r\nimport React from 'react';\r\n\r\nimport Projects from '../components/projects';\r\nimport Header from '../components/header';\r\nimport Layout from '../components/layout';\r\nimport Seo from '../components/seo';\r\nimport NotFound from '../pages/404';\r\n\r\nconst Index = ({ data }) => {\r\n  const projects = data.allMarkdownRemark.edges.filter(\r\n    (edge) => edge.node.frontmatter.type === 'project'\r\n  );\r\n  const noProject = !projects || !projects.length;\r\n\r\n  if (!projects || !projects.length) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"Projects\" />\r\n      <Header metadata={data.site.siteMetadata} />\r\n      {!noProject && <Projects projects={projects} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const pageQuery = graphql`\r\n  query Projects {\r\n    site {\r\n      siteMetadata {\r\n        name\r\n        title\r\n        description\r\n        about\r\n        author\r\n        github\r\n        linkedin\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            type\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["classes","_ref","title","children","React","className","style","paddingTop","linkContent","date","name","description","link","internal","Link","to","href","NotFoundPage","Layout","Seo","projects","Section","map","post","SummaryItem","key","node","fields","slug","frontmatter","data","allMarkdownRemark","edges","filter","edge","type","noProject","length","Header","metadata","site","siteMetadata","Projects","NotFound"],"sourceRoot":""}
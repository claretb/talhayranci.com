{"version":3,"file":"component---src-pages-blog-jsx-36f584d58afbae9a8d9e.js","mappings":"+IAsBA,IAjBkBA,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,OACEE,EAAAA,cAACC,EAAAA,EAAO,CAACC,MAAM,kBACZH,EAAMI,KAAKC,GACVJ,EAAAA,cAACK,EAAAA,EAAW,CACVC,KAAMF,EAAKG,KAAKC,YAAYF,KAC5BG,IAAKL,EAAKG,KAAKG,OAAOC,KACtBC,KAAMR,EAAKG,KAAKC,YAAYN,MAC5BW,YAAaT,EAAKG,KAAKC,YAAYK,YACnCC,KAAMV,EAAKG,KAAKG,OAAOC,KACvBI,UAAQ,MAGJ,C,qCChBd,MAAMC,EACK,sBADLA,EAEG,qCAFHA,EAIF,sEAJEA,EAKK,gEAcX,IAXgBlB,IAA0B,IAAzB,MAAEI,EAAK,SAAEe,GAAUnB,EAClC,OACEE,EAAAA,cAAA,OAAKkB,UAAWF,EAAiBG,MAAO,CAAEC,WAAY,KACpDpB,EAAAA,cAAA,OAAKkB,UAAWF,GACdhB,EAAAA,cAAA,MAAIkB,UAAWF,GAAkBd,IAEnCF,EAAAA,cAAA,OAAKkB,UAAWF,GAAkBC,GAC9B,C,+CCdV,MAAMD,EACK,OADLA,EAEE,mCAFFA,EAGE,4BAHFA,EAIS,mCAgCf,IA7BoBlB,IAMb,IACDuB,GAPe,KACnBf,EAAO,KAAI,KACXM,EAAI,YACJC,EAAW,KACXC,GAAO,EAAK,SACZC,GAAW,GACZjB,EAQC,OALEuB,EADEN,EACYf,EAAAA,cAACsB,EAAAA,KAAI,CAACC,GAAIT,GAAOF,GAEjBZ,EAAAA,cAAA,KAAGwB,KAAMV,GAAOF,GAI9BZ,EAAAA,cAAA,OAAKkB,UAAWF,GACdhB,EAAAA,cAAA,MACEkB,UAAY,GAAEF,KACZF,EAAO,mCAAqC,MAG7CA,EAAOO,EAAcT,GAEvBN,GAAQN,EAAAA,cAAA,MAAIkB,UAAWF,GAAeV,GACvCN,EAAAA,cAAA,KAAGkB,UAAWF,GAAsBH,GAChC,C,0EC7BV,MAAMG,EACG,oBADHA,EAEE,YAiBR,UAdqBS,IACnBzB,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAC2B,EAAAA,EAAG,CAACzB,MAAM,cACXF,EAAAA,cAAA,MAAIkB,UAAWF,GAAe,kBAC9BhB,EAAAA,cAAA,SAAG,2CACwC,IACzCA,EAAAA,cAACsB,EAAAA,KAAI,CAACJ,UAAWF,EAAcO,GAAG,KAAI,oBAE/B,K,8FCSb,UAnBczB,IAAe,IAAd,KAAE8B,GAAM9B,EACrB,MAAMC,EAAQ6B,EAAKC,kBAAkBC,MAAMC,QACxCC,GAAwC,SAA/BA,EAAKzB,KAAKC,YAAYyB,OAE5BC,GAAUnC,IAAUA,EAAMoC,OAEhC,OAAKpC,GAAUA,EAAMoC,OAKnBnC,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAC2B,EAAAA,EAAG,CAACzB,MAAM,SACXF,EAAAA,cAACoC,EAAAA,EAAM,CAACC,SAAUT,EAAKU,KAAKC,gBAC1BL,GAAUlC,EAAAA,cAACwC,EAAAA,EAAS,CAACzC,MAAOA,KAPzBC,EAAAA,cAACyC,EAAAA,QAAQ,KAQP,C","sources":["webpack://devfolio/./src/components/blog-posts/index.jsx","webpack://devfolio/./src/components/section/index.jsx","webpack://devfolio/./src/components/summary-item/index.jsx","webpack://devfolio/./src/pages/404.jsx","webpack://devfolio/./src/pages/blog.jsx"],"sourcesContent":["import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <Section title=\"All Blog Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          date={post.node.frontmatter.date}\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default BlogPosts;\n","import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs tracking-widest text-sm text-black leading-normal uppercase',\n  content: 'flex-none text-md text-gray-800 font-light md:flex-1 md:pl-20',\n};\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={classes.wrapper} style={{ paddingTop: 10 }}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>{title}</h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  date: 'italic text-gray-600 pb-1',\n  description: 'text-md text-gray-600 font-light',\n};\n\nconst SummaryItem = ({\n  date = null,\n  name,\n  description,\n  link = false,\n  internal = false,\n}) => {\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <h3\n        className={`${classes.name} ${\n          link ? 'hover:underline hover:text-black' : ''\n        }`}\n      >\n        {link ? linkContent : name}\n      </h3>\n      {date && <h3 className={classes.date}>{date}</h3>}\n      <p className={classes.description}>{description}</p>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport BlogPosts from '../components/blog-posts';\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport NotFound from '../pages/404';\n\nconst Index = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges.filter(\n    (edge) => edge.node.frontmatter.type === 'blog'\n  );\n  const noBlog = !posts || !posts.length;\n\n  if (!posts || !posts.length) {\n    return <NotFound />;\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Header metadata={data.site.siteMetadata} />\n      {!noBlog && <BlogPosts posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            type\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","posts","React","Section","title","map","post","SummaryItem","date","node","frontmatter","key","fields","slug","name","description","link","internal","classes","children","className","style","paddingTop","linkContent","Link","to","href","NotFoundPage","Layout","SEO","data","allMarkdownRemark","edges","filter","edge","type","noBlog","length","Header","metadata","site","siteMetadata","BlogPosts","NotFound"],"sourceRoot":""}